<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rbasics on r-econometrics</title>
    <link>https://www.r-econometrics.com/rbasics/</link>
    <description>Recent content in Rbasics on r-econometrics</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.r-econometrics.com/rbasics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction to dplyr</title>
      <link>https://www.r-econometrics.com/rbasics/dplyrintro/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/dplyrintro/</guid>
      <description>&lt;p&gt;The cleaning and transformation of data belong to the most time consuming parts of any economic analysis. Many graphical or statistical functions in R require specifically formatted data to work properly. Although the standard functions of R can be used to prepare your data for further analysis, some people find them a bit laborious for daily applications. Therefore, alternatives have been developed, which make data transformation in R easier and also faster. One of these alternatives is the &lt;code&gt;dplyr&lt;/code&gt; package of the &lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;tidyverse&lt;/a&gt;. It has gained great popularity among R users and being familiar with its syntax can be considered a standard skill in R.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; In the following I give an introduction to some main functions of &lt;code&gt;dplyr&lt;/code&gt;, which I also use extensively at work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Help, Importing Data and Some More Vocabulary</title>
      <link>https://www.r-econometrics.com/rbasics/help_and_data_import_etc/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/help_and_data_import_etc/</guid>
      <description>&lt;div id=&#34;getting-help&#34; class=&#34;section level3&#34;&gt;&#xA;&lt;h3&gt;Getting help&lt;/h3&gt;&#xA;&lt;p&gt;An important part of any R package is its documentation. The documentation of any function can be obtained by using &lt;code&gt;?&lt;/code&gt; followed by the name of the function or by using &lt;code&gt;help(&#34;function_name&#34;)&lt;/code&gt;. After the execution of a help command a new page should appear in the lower right window in RStudio. If not, click on the tab &lt;em&gt;Help&lt;/em&gt; in the lower right window. The help page contains the title of the function followed by a short description. For now the most important parts of the documentation are the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Preparing Your Workplace for an Analysis</title>
      <link>https://www.r-econometrics.com/rbasics/beforestart/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/beforestart/</guid>
      <description>&lt;div id=&#34;create-a-working-directory&#34; class=&#34;section level2&#34;&gt;&#xA;&lt;h2&gt;Create a working directory&lt;/h2&gt;&#xA;&lt;p&gt;Usually, people want to keep the folder structure on their computers tidy, so that they and their co-workers understand, which documents and data were used for a particular project – even if that project was finished months ago. This should also be the case when you work with R. Therefore, I recommend to create a new folder for every new project, which becomes the so-called working directory. There you put all the files, which are necessary for a project. For example, for this introduction I created the folder &lt;em&gt;r_intro&lt;/em&gt; in my file explorer and I recommend to do the same on your computer now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Structure of R</title>
      <link>https://www.r-econometrics.com/rbasics/rstructure/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/rstructure/</guid>
      <description>&lt;p&gt;R – just like many other standard programming languages like C, C++, Python etc. – can be comprehended as a language that provides the basis for a system of code chunks, which have been developed by many people across the globe, who wanted to share their work. Within the R community these chunks of R code are called &lt;em&gt;packages&lt;/em&gt;. And each of those packages usually consist of at least one &lt;em&gt;function&lt;/em&gt;.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; This structure is presented in the following graph. Beside a schematic description of a package and its functions in the upper part of the graph it also contains some real world examples using the packages &lt;code&gt;ggplot2&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Visualisation in R Using ggplot2</title>
      <link>https://www.r-econometrics.com/rbasics/ggplotintro/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/ggplotintro/</guid>
      <description>&lt;p&gt;A major challenge in data analysis is to summarise and present data with informative graphs. The &lt;code&gt;ggplot2&lt;/code&gt; package was specifically designed to help with this task. Since it is a very powerful and well documented package&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, this introduction will only focus on its basic syntax, so that the user gets a better understanding of how to read the supporting material on the internet.&lt;/p&gt;&#xA;&lt;p&gt;ggplot graphs are built with some kind of blocks, which usually start with the function &lt;code&gt;ggplot&lt;/code&gt;. Its first argument contains the data object and the second argument is a further function called &lt;code&gt;aes&lt;/code&gt;.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; It controls, which columns of the data frame are used for the axes, colours, shapes of the data points and further features of the graph. The remaining blocks are separated by plus &lt;code&gt;+&lt;/code&gt; signs and – if not specified otherwise – take the information from the first block and add a certain aspect to the graph, for example additional lines or data points. To understand what this all means, let us look at some basic examples.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing R and RStudio</title>
      <link>https://www.r-econometrics.com/rbasics/installation/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://www.r-econometrics.com/rbasics/installation/</guid>
      <description>&lt;p&gt;For this introduction I recommend to install two software packages on your system:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;R&lt;/em&gt;: The software, which does all the calculations.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;RStudio&lt;/em&gt;: The working environment, where all the code will be developed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;Note that the instructions of this section were written for a standard installation on a private computer. If you work on a corporate machine, the installation could be different due to different IT requirements of your company.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div id=&#34;installing-r&#34; class=&#34;section level2&#34;&gt;&#xA;&lt;h2&gt;Installing R&lt;/h2&gt;&#xA;&lt;p&gt;A proper installation of R is the prerequisite of everything that will follow. Fortunately, installing R is easy and can be done quickly by following these steps:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
